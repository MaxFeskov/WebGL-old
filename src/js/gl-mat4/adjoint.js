/**
 * Calculates the adjugate of a mat4
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */

export default function adjoint(out, a) {
  const a00 = a[0];
  const a01 = a[1];
  const a02 = a[2];
  const a03 = a[3];
  const a10 = a[4];
  const a11 = a[5];
  const a12 = a[6];
  const a13 = a[7];
  const a20 = a[8];
  const a21 = a[9];
  const a22 = a[10];
  const a23 = a[11];
  const a30 = a[12];
  const a31 = a[13];
  const a32 = a[14];
  const a33 = a[15];

  out[0] =
    (a11 * ((a22 * a33) - (a23 * a32))) - (a21 * ((a12 * a33) - (a13 * a32))) + (a31 * ((a12 * a23) - (a13 * a22)));
  out[1] = -(
    (a01 * ((a22 * a33) - (a23 * a32))) -
    (a21 * ((a02 * a33) - (a03 * a32))) +
    (a31 * ((a02 * a23) - (a03 * a22)))
  );
  out[2] =
    (a01 * ((a12 * a33) - (a13 * a32))) - (a11 * ((a02 * a33) - (a03 * a32))) + (a31 * ((a02 * a13) - (a03 * a12)));
  out[3] = -(
    (a01 * ((a12 * a23) - (a13 * a22))) -
    (a11 * ((a02 * a23) - (a03 * a22))) +
    (a21 * ((a02 * a13) - (a03 * a12)))
  );
  out[4] = -(
    (a10 * ((a22 * a33) - (a23 * a32))) -
    (a20 * ((a12 * a33) - (a13 * a32))) +
    (a30 * ((a12 * a23) - (a13 * a22)))
  );
  out[5] =
    (a00 * ((a22 * a33) - (a23 * a32))) - (a20 * ((a02 * a33) - (a03 * a32))) + (a30 * ((a02 * a23) - (a03 * a22)));
  out[6] = -(
    (a00 * ((a12 * a33) - (a13 * a32))) -
    (a10 * ((a02 * a33) - (a03 * a32))) +
    (a30 * ((a02 * a13) - (a03 * a12)))
  );
  out[7] =
    (a00 * ((a12 * a23) - (a13 * a22))) - (a10 * ((a02 * a23) - (a03 * a22))) + (a20 * ((a02 * a13) - (a03 * a12)));
  out[8] =
    (a10 * ((a21 * a33) - (a23 * a31))) - (a20 * ((a11 * a33) - (a13 * a31))) + (a30 * ((a11 * a23) - (a13 * a21)));
  out[9] = -(
    (a00 * ((a21 * a33) - (a23 * a31))) -
    (a20 * ((a01 * a33) - (a03 * a31))) +
    (a30 * ((a01 * a23) - (a03 * a21)))
  );
  out[10] =
    (a00 * ((a11 * a33) - (a13 * a31))) - (a10 * ((a01 * a33) - (a03 * a31))) + (a30 * ((a01 * a13) - (a03 * a11)));
  out[11] = -(
    (a00 * ((a11 * a23) - (a13 * a21))) -
    (a10 * ((a01 * a23) - (a03 * a21))) +
    (a20 * ((a01 * a13) - (a03 * a11)))
  );
  out[12] = -(
    (a10 * ((a21 * a32) - (a22 * a31))) -
    (a20 * ((a11 * a32) - (a12 * a31))) +
    (a30 * ((a11 * a22) - (a12 * a21)))
  );
  out[13] =
    (a00 * ((a21 * a32) - (a22 * a31))) - (a20 * ((a01 * a32) - (a02 * a31))) + (a30 * ((a01 * a22) - (a02 * a21)));
  out[14] = -(
    (a00 * ((a11 * a32) - (a12 * a31))) -
    (a10 * ((a01 * a32) - (a02 * a31))) +
    (a30 * ((a01 * a12) - (a02 * a11)))
  );
  out[15] =
    (a00 * ((a11 * a22) - (a12 * a21))) - (a10 * ((a01 * a22) - (a02 * a21))) + (a20 * ((a01 * a12) - (a02 * a11)));

  return out;
}
